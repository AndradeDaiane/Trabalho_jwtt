# application.yml
# üöÄ Configura√ß√µes do Servidor Web
server:
  port: 8080 # Porta padr√£o da API

# üóÑÔ∏è Configura√ß√µes do Banco de Dados H2
spring:
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE # Banco H2 em mem√≥ria
    driver-class-name: org.h2.Driver
    username: sa
    password:
  h2:
    console:
      enabled: true # Ativa o console do H2
      path: /h2-console # http://localhost:8080/h2-console
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update # Cria/atualiza automaticamente o schema. ‚ö†Ô∏è N√£o usar em produ√ß√£o!
    show-sql: true # Exibe as queries no terminal
    properties:
      hibernate:
        format_sql: true # Formata SQL no console

  devtools:
    restart:
      enabled: true # Reinicia a aplica√ß√£o automaticamente ao salvar altera√ß√µes
    livereload:
      enabled: true # Ativa LiveReload (requer extens√£o no navegador)

# üîê Configura√ß√µes do JWT
jwt:
  secret: umaChaveSecretaMuitoLongaEComplexaParaAssinarTokensJWT # M√≠nimo 32 caracteres para HMAC-SHA256
  expiration: 3600000 # Expira√ß√£o do token (em milissegundos) ‚Üí 1h

# üìö Documenta√ß√£o da API com Swagger (Springdoc OpenAPI)
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    disable-swagger-default-url: true # Evita abrir a Petstore por padr√£o
  api-docs:
    path: /v3/api-docs